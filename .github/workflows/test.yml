name: Test GitHub Actions

on:
  push:
    branches:
      - main

jobs:
  test-echo:
    name: Test GitHub Actions
    runs-on: ubuntu-latest
    steps:
      - name: Determine Current Version
        id: version
        run: |
          # Check if version.txt exists; initialize if not
          if [ ! -f version.txt ]; then echo "0.0.0" > version.txt; fi
          
          # Read the current version
          CURRENT_VERSION=$(cat version.txt)
          
          # Increment the patch number
          PATCH=$(echo $CURRENT_VERSION | awk -F. '{print $3}')
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v patch=$NEW_PATCH '{major = $1; minor = $2; print major "." minor "." patch}')
          
          # Update version.txt with the new version
          echo $NEW_VERSION > version.txt
          
          # Export the new version for use in the workflow
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Current version: $CURRENT_VERSION, New version: $NEW_VERSION"

      - name: Build Docker Image with Version Tag
        run: |
          docker build -t cowsay:$NEW_VERSION .
          
      - name: Verify Docker Image
        run: |
          docker images | grep cowsay
          
      - name: Save Docker Image as Artifact
        run: |
          docker save cowsay:$NEW_VERSION | gzip > cowsay-$NEW_VERSION.tar.gz
          ls -l cowsay-$NEW_VERSION.tar.gz
          
      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cowsay-docker-image
          path: cowsay-$NEW_VERSION.tar.gz
